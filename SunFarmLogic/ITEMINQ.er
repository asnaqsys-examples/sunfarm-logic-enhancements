// ASNA Monarch(R) version 11.4.12.0 at 8/25/2023
// Migrated source location: library ERCAP, file QRPGSRC, member ITEMINQ

Using ACME.SunFarmCustomers_Job

Using System
Using ASNA.QSys.Runtime
Using ASNA.QSys.Runtime.JobSupport

BegClass ITEMINQ Extends(Program) Access(*Public) + 
   Attributes(ActivationGroup("*DFTACTGRP"), + 
             System.ComponentModel.Description("Item Inquiry and Maintenance")) + 
   UsesCycle(*Yes)

    //********************************************************************
    // INDICATORS:
    //   03     F3 pressed
    //   40-44  Cursor positioning
    //   50     PageUp pressed
    //   51     PageDown pressed
    //   66     EOF reading on the subfile
    //   76     BOF reading CUSTOMERL2
    //   77     EOF reading CUSTMOMER2
    //   88     LR seton in a called program
    //   99     General error indicator
    //********************************************************************
    DclWorkStnFile ITEMDSPF DspFile("~\Areas\SunFarmViews\Pages\ITEMDSPF") Subfile( SFL1,sflrrn )
    DclDiskFile ITEMMASTL2  Type(*Input) Org(*Indexed) DB(MyJob.MyDatabase) File("*LIBL/ITEMMASTL2") ImpOpen(*No) RnmFmt( L2RECFMT )
    DclDiskFile ITEMMASTL1  Type(*Update) AddRec(*Yes) Org(*Indexed) DB(MyJob.MyDatabase) File("*LIBL/ITEMMASTL1") ImpOpen(*No) RnmFmt( L1RECFMT )
    DclDiskFile ITEMMASTL1_ReadOnly  Type(*Input) AddRec(*Yes) Org(*Indexed) DB(MyJob.MyDatabase) File("*LIBL/ITEMMASTL1") ImpOpen(*No) RnmFmt( L1RECFMT_ReadOnly )
    //********************************************************************
    DclDs 
        DclDsFld #pNbrs            Type( *Zoned   )    Len( 3,0 )
    
    DclArray pNumbers          Type( *Zoned   ) Len( 9  ,0 ) Dim( 20 )
    DclFld MID               Type( *Char    )    Len( 7   )
    DclFld MTX               Type( *Char    )    Len( 30  )
    DclFld LockRec           Type( *Char    )    Len( 1   )
    DclFld X                 Type( *Packed  )    Len( 5,0 ) Inz( 0 )
    DclDs 
        DclDsFld SVITEMNO          Type( *Zoned   )    Len( 9,0 )
    
    // ITEM       DS
    DclDs ITEMDS ExtDesc(*Yes) DbDesc(MyJob.MyDatabase) FileDesc("*LIBL/ITEMMASTER")
    RnmFlds DsName( ITEMDS     )                           +
    Flds                                            +
    (                                              +
    ITEMCATGRY                    ,  ITEMCATGRY                    ,  +
    ITEMDESC  ,  ITEMDESC  ,  +
    ITEMNUMBER                    ,  ITEMNUMBER                    ,  +
    ITEMPRICE ,  ITEMPRICE ,  +
    ITEMQTYAVL                    ,  ITEMQTYAVL                    ,  +
    ITEMQTYORD                    ,  ITEMQTYORD                    ,  +
    ITEMSHRTDS                    ,  ITEMSHRTDS                    ,  +
    ITEMUNIT  ,  ITEMUNIT  ,  +
    ITEMWEIGHT                    ,  ITEMWEIGHT                      + 
    )
    DclDs  Len(429)
        DclDsFld NbrOfparms        Type( *Zoned   )    Len( 3,0 ) StartAt(36)
    
    //********************************************************************
 
// Fields defined in main C-Specs declared now as Global fields (Monarch generated)
    DclFld AddUpd            Type( *Char    )    Len( 1   )
    DclFld Name20            Type( *Char    )    Len( 20  )
    DclFld pRtnItem          Type( *Packed  )    Len( 9,0 )
    DclFld pSelOnly          Type( *Char    )    Len( 1   )
    DclFld savrrn            Type( *Packed  )    Len( 4,0 )
    DclFld sflrrn            Type( *Packed  )    Len( 4,0 )
    DclFld TEMPNO            Type( *Packed  )    Len( 9,0 )
 
    // PLIST(s) relocated by Monarch
    DclPList #PLMSG
        DclParm MID
        DclParm MTX
    
 
    // KLIST(s) relocated by Monarch
    DclKList KeyMastL2
        DclKFld ITEMSHRTDS 
        DclKFld ITEMNUMBER 
    
 
/region Constructor and Dispose 
    BegConstructor Access(*Public)
 
        // Initialization of Data Structure fields (Monarch generated)
        Reset_#pNbrs()
 
        Open ITEMMASTL1 DB(CurrentJob.Database)
        Open ITEMMASTL1_ReadOnly DB(CurrentJob.Database)
        Open ITEMMASTL2 DB(CurrentJob.Database)
    EndConstructor
 
    BegSr Dispose  Access( *Public ) Modifier(*Overrides)
        DclSrParm disposing Type(*Boolean)
        If( disposing )
            Close *All
        EndIf
        *Base.Dispose(disposing)
    EndSr
 
 
/endregion
    BegProc *Entry Access(*Public)
        DclSrParm pSelOnly          By(*Reference)
        DclSrParm pRtnItem          By(*Reference)
 
        NbrOfparms = *parms
 
    //********************************************************************
        // KLIST "KeyMastL2" moved by Monarch to global scope.
    //********************************************************************
        If( NbrOfparms > 1 )
            pRtnItem = 0
        EndIf
    //********************************************************************
        DoUntil ( *IN03)
            *IN90 = "0"
            Write MSGSFC
            Write KEYS
            ExFmt SFLC 
            ClearMsgs()
    //--------------------------------------------------------------------
            Select
    // Exit
                When( *IN03)
                    *INLR = "1"
                    Leave
    // PageUp-RollDown
                When( *IN50)
                    SetLL L2RECFMT Key(ITEMSHRTDS)
                    LoadSfl()
                When( SETITMDSC <> *Blanks )
                    Name20 = SETITMDSC
                    SetLL L2RECFMT Key(Name20)
                    LoadSfl()
    // PageDown-RollUp
                When( *IN51)
                    ReadBack()
                    LoadSfl()
                When( SETITMDSC <> *Blanks )
                    Name20 = SETITMDSC
                    SetLL L2RECFMT Key(Name20)
                    LoadSfl()
                Other
                    SetOff IndList( *IN30, *IN66 )
                    savrrn = sflrrn
                    pNumbers = 0
                    #pNbrs = 0
                    DoUntil ( *IN66)
                        ReadC SFL1 Eof(*IN66)
                        If( *Not *IN66)
                            Select
                                When( SFSEL = 1 ) // Maintainance.
                                    If( NbrOfparms > 1 )
                                        If( pSelOnly = "Y" ) // If only selecting,
                                            pRtnItem = SFITEMNUM
                                            SetOn *IN03 //  and return.
                                            Leave
                                        EndIf
                                    EndIf
                                    RcdUpdate()
                            EndSl
                        EndIf
                    EndDo
                    sflrrn = savrrn
            EndSl
        EndDo
        *INLR = *On
    //*********************************************************************
    // UPDATE THE Item RECORD
    //*********************************************************************
    EndProc
    BegSr RcdUpdate
        ClearSel()
        Move "U" AddUpd
        ITEMNUMBER = SFITEMNUM
        LockRec = "N"
        ItemChk()
        SFITEM = ITEMNUMBER
        SFLNGDESC = ITEMDESC
        SFOLDDESC = ITEMSHRTDS
        SFDESC = ITEMSHRTDS
        MoveL ITEMPRICE SFPRICE
        SFWEIGHT = ITEMWEIGHT
        MoveL ITEMQTYAVL SFAVAIL
        MoveL ITEMQTYORD SFONORDR
        SetOn *IN40 // Place the cursor on
        SetOff IndList( *IN41, *IN42, *IN43 ) //  the name field.
        SetOff IndList( *IN44, *IN99 )
    //-------------------------------------------------------
        DoUntil ( *IN12)
            Write MSGSFC
            ExFmt ITEMREC 
            SetOff IndList( *IN40, *IN41, *IN42 )
            SetOff IndList( *IN43, *IN44 )
            ClearMsgs()
            *IN30 = "0"
            Select
                When( *IN03)
                    Leave
                When( *IN12)
                    Leave
                When( *IN06)
                    SVITEMNO = ITEMNUMBER
                    SetGT L1RECFMT_ReadOnly Key(*Hival)
                    ReadP L1RECFMT_ReadOnly // Removed Access(*NoLock)
                    ITEMMASTL1.StatusCode = ITEMMASTL1_ReadOnly.StatusCode
                    TEMPNO = ITEMNUMBER + 100
                    Clear ITEMDS
                    ITEMNUMBER = TEMPNO
                    Move "A" AddUpd
                    SFITEM = TEMPNO
                    MoveL *Blanks SFLNGDESC
                    MoveL *Blanks SFDESC
                    MoveL *Blanks SFPRICE
                    MoveL *Blanks SFUNIT
                    SFWEIGHT = 0
                    MoveL *zeros SFAVAIL
                    MoveL *zeros SFONORDR
                    *IN30 = "1"
    // Delete - leave sales hanging?
                When( *IN11)
                    LockRec = "Y"
                    ItemChk()
                    If( *Not(*IN80) )
                        Delete From(L1RECFMT)
                    EndIf
                    Chain SFL1 Key(sflrrn)
                    Move *Zeros SFITMPRIC
                    Move *Zeros SFITMAVAIL
                    SFITEMDESC = "*** DELETED ***"
    // Set the color
                    *IN60 = "1"
                    Update SFL1
                    *IN60 = "0"
    // Delete msg
                    MID = "ITM0003"
                    Move ITEMNUMBER MTX
                    CallD Pgm( "ACME.SunFarm.MSGLOD"  ) ParmList(#PLMSG)
                    Leave
    // Add/update on the Enter key
                Other
                    If( AddUpd = "A" )
                        EditFlds()
                        If( *IN99) // Any errors?
                            Iterate
                        EndIf
                        UpdDbFlds()
                        Write L1RECFMT
                        SetLL L2RECFMT Key(*loval)
                        LoadSfl()
    // Added message
                        MID = "ITM0001"
                        Move SFITEM MTX
                        CallD Pgm( "ACME.SunFarm.MSGLOD"  ) ParmList(#PLMSG)
                        Leave
    // Update the database
                    Else
                        EditFlds()
                        If( *IN99) // Any errors?
                            Iterate
                        EndIf
                        LockRec = "Y"
                        ItemChk() //Reread the record.
                        UpdDbFlds()
                        Update L1RECFMT
                        Chain SFL1 Key(sflrrn)
                        MoveL ITEMNUMBER SFITEMNUM
                        SFITEMDESC = ITEMSHRTDS
                        SFITMPRIC = ITEMPRICE
                        SFITMAVAIL = ITEMQTYAVL
                        Update SFL1
    // Updated message
                        MID = "ITM0002"
                        MoveL ITEMNUMBER MTX
                        CallD Pgm( "ACME.SunFarm.MSGLOD"  ) ParmList(#PLMSG)
                    EndIf
    // Re-open for the next update
                    LockRec = "N"
                    ItemChk()
            EndSl
        EndDo
    EndSr
    //*********************************************************************
    //  EDIT THE SCREEN FIELDS
    //*********************************************************************
    BegSr EditFlds
        SetOff IndList( *IN40, *IN41, *IN42 ) //Clear all error inds
        SetOff IndList( *IN43, *IN44, *IN99 )
        Select
            When ( SFLNGDESC = *Blanks )
                SetOn IndList( *IN40, *IN99 )
                MID = "ITM0004" // Blank field.
                MTX = "Long description"
            When ( SFDESC = *Blanks )
                SetOn IndList( *IN41, *IN99 )
                MID = "ITM0004" // Blank field.
                MTX = "Description"
            When ( SFPRICE = *zero )
                SetOn IndList( *IN42, *IN99 )
                MID = "ITM0005" // Blank field.
                MTX = "Price"
            When ( SFUNIT = *Blanks )
                SetOn IndList( *IN43, *IN99 )
                MID = "ITM0004" // Blank field.
                MTX = "Unit of Measure"
            When ( SFWEIGHT = 0 )
                SetOn IndList( *IN44, *IN99 )
                MID = "ITM0005" // Blank field.
                MTX = "Weight"
        EndSl
        If( *IN99)
            CallD Pgm( "ACME.SunFarm.MSGLOD"  ) ParmList(#PLMSG)
        EndIf
    EndSr
    //*********************************************************************
    //  UPDATE THE DATABASE FIELDS
    //*********************************************************************
    BegSr UpdDbFlds
        ITEMNUMBER = SFITEM
        Move SFLNGDESC ITEMDESC
        Move SFDESC ITEMSHRTDS
        ITEMPRICE = SFPRICE
        Move SFUNIT ITEMUNIT
        ITEMWEIGHT = SFWEIGHT
        ITEMQTYAVL = SFAVAIL
        ITEMQTYORD = SFONORDR
    EndSr
    //********************************************************************
    //   CHECK THE ITEM NUMBER
    //********************************************************************
    BegSr ItemChk
        If( LockRec = "N" )
            Chain L1RECFMT_ReadOnly Key(ITEMNUMBER) NotFnd(*IN80) // Removed Access(*NoLock)
            ITEMMASTL1.StatusCode = ITEMMASTL1_ReadOnly.StatusCode
        Else
            Chain L1RECFMT Key(ITEMNUMBER) NotFnd(*IN80)
        EndIf
    EndSr
    //*********************************************************************
    //  Load Sfl Subroutine
    //*********************************************************************
    BegSr LoadSfl
        SetOff *IN61 //Start with green.
        *IN90 = "1" //Clear the subfile.
        Write SFLC
        SetOff IndList( *IN76, *IN90 ) //Display records.
        sflrrn = 0
        Read L2RECFMT Eof(*IN77)
    //----------------------------------------------------------
        DoWhile ( *Not *IN77  /* EOF or full s/f. */ +
            *And ( sflrrn < 14 ) )
            SFITEMNUM = ITEMNUMBER
            SFITEMDESC = ITEMSHRTDS
            SFITMPRIC = ITEMPRICE
            MoveL ITEMQTYAVL SFITMAVAIL
            If( *IN61) //Save the color of
                SFCOLOR = "W"
            Else
                SFCOLOR = "G"
            EndIf
            sflrrn = sflrrn + 1
            Write SFL1
            *IN61 = (*Not *IN61) //Reverse the colour.
            Read L2RECFMT Eof(*IN77)
        EndDo
    // Any records found?
        If( sflrrn = 0 )
            sflrrn = 1
            Move *ZEROS SFITEMNUM
            ITEMNUMBER = 0
            MoveL "END OF FILE" SFITEMDESC Fill(*Pad)
            Move *ZEROS SFITMPRIC
            Move *ZEROS SFITMAVAIL
            Write SFL1
        EndIf
    EndSr
    //*********************************************************************
    //  Read Backwards for a PageDown
    //*********************************************************************
    BegSr ReadBack
        SetOff IndList( *IN76, *IN77 )
        X = 0
        Chain SFL1 Key(1) //Get the top name and
        ITEMSHRTDS = SFITEMDESC
        ITEMNUMBER = SFITEMNUM
        Chain L2RECFMT Key(KeyMastL2)
        ReadP L2RECFMT Bof(*IN76)
        DoWhile ( *Not *IN76  /* EOF or full s/f. */ +
            *And ( X < 14 ) )
            X = X + 1
            ReadP L2RECFMT Bof(*IN76)
        EndDo
        If( *IN76) //Any records found?
            SetLL L2RECFMT Key(*LoVal)
        EndIf
    EndSr
    //*********************************************************************
    // CLEAR THE SELECTION NUMBER
    //*********************************************************************
    BegSr ClearSel
        SFSEL = 0
        *IN61 = (SFCOLOR = "W")
        Update SFL1
    EndSr
    //*********************************************************************
    // CLEAR THE MESSAGE QUEUE
    //*********************************************************************
    BegSr ClearMsgs
        CallD Pgm( "ACME.SunFarm.MSGCLR"  )
    EndSr
    //*********************************************************************
    // Init Subroutine
    //*********************************************************************
    BegSr PROCESS_STAR_INZSR
        SetLL L2RECFMT Key(*Loval)
        LoadSfl()
        *IN75 = *On
        MID = *Blank
        @PGMQ = "*"
        CallD Pgm( "ACME.SunFarm.MSGCLR"  )
    // Message handling parm list
        // PLIST "#PLMSG" moved by Monarch to global scope.
    EndSr
    
    BegSr Reset_#pNbrs
        #pNbrs = *Zeros
    EndSr
 
EndClass
// /Error There are 1 NoLock Sequential Read operations. Using *NoLock on a file opened for *Update is not supported with DSS .NET
// /Error There are 1 NoLock CHAIN operations. Using *NoLock on a file opened for *Update is not supported with DSS .NET
